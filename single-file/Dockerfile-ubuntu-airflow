# This file is designed to implement AirFlow in a Docker container
# (rather than an EC2) for the following video
# https://youtu.be/o88LNQDH2uI?si=pTlCMx16Y9zbk-Ls

# This is the list of commands
# https://robust-dinosaur-2ef.notion.site/Running-Airflow-on-a-small-AWS-EC2-Instance-8e2a42d2ce7946c3a3d753abc13f2e57

# This is the ChatGPT convo used to update commands for Ubuntu/Docker
# https://chatgpt.com/c/66e71972-6b20-8009-8d05-bc6f96a6efae


# Use Ubuntu as the base image
FROM ubuntu:latest

# Update the package list and install some basic utilities (optional)
RUN apt-get update && \
    apt-get install -y bash curl vim && \
    rm -rf /var/lib/apt/lists/* && \
    apt update && \
    apt install python3-pip -y && \
    apt-get install software-properties-common -y && \
    add-apt-repository ppa:deadsnakes/ppa -y && \
    apt install python3.10-full -y && \
    apt-get install libpq-dev -y && \
    apt install sqlite3 && \
    apt install libpq-dev build-essential -y && \
    apt install python3.10-dev -y && \
    apt-get install postgresql postgresql-contrib -y && \
    su - postgres -c "pg_ctlcluster 16 main start" && \
    su - postgres -c "psql -U postgres -c \"CREATE DATABASE airflow;\"" && \
    su - postgres -c "psql -U postgres -c \"CREATE USER airflow WITH PASSWORD 'airflow';\"" && \
    su - postgres -c "psql -U postgres -c \"GRANT ALL PRIVILEGES ON DATABASE airflow TO airflow;\"" && \
    su - postgres -c "psql -U postgres -c \"GRANT USAGE ON SCHEMA public TO airflow;\"" && \
    su - postgres -c "psql -U postgres -c \"GRANT ALL PRIVILEGES ON SCHEMA public TO airflow;\"" && \
    su - postgres -c "psql -U postgres -c \"ALTER USER airflow WITH SUPERUSER;\""  && \
    /bin/python3.10 -m venv /venv && \
    /venv/bin/pip install --upgrade pip && \
    /venv/bin/pip install "apache-airflow[postgres]==2.5.0" --constraint "https://raw.githubusercontent.com/apache/airflow/constraints-2.5.0/constraints-3.7.txt" && \
    /venv/bin/airflow db init && \
    sed -i 's#sqlite:////root/airflow/airflow.db#postgresql+psycopg2://airflow:airflow@localhost/airflow#g' /root/airflow/airflow.cfg && \
    sed -i 's#SequentialExecutor#LocalExecutor#g' /root/airflow/airflow.cfg && \
    /venv/bin/airflow db init && \
    /venv/bin/airflow users create -u airflow -f airflow -l airflow -r Admin -e airflow@gmail.com --password airflow

# Set the default command to start a bash shell
CMD ["/bin/bash", "-c", "su - postgres -c \"pg_ctlcluster 16 main start\"; sleep 5; /venv/bin/airflow webserver & /venv/bin/airflow scheduler"]

# Command to build the container
# docker build -f Dockerfile-ubuntu-airflow -t ubuntu-airflow .

# Command to run the container
# docker run -p 8080:8080 ubuntu-airflow

# Command to reconnect to the container
# docker exect -it <container-id> bash
# Command to change root password for container
# docker exec -itu root <container-id> passwd
# Commands to preserve container changes
# Open a new terminal, get the container ID: docker ps
# Commit the container as a new image:docker commit <container_id> airflow-practice

# Optional - revoke superuser privileges for airlfow postgres user.
# su - postgres -c "psql -U postgres -d airflow -c \"ALTER USER airflow WITH NOSUPERUSER;\""
